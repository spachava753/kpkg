name: build binaries

on:
  workflow_dispatch: { }

jobs:
  build:
    name: Build the binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - os: darwin
            arch: amd64
            # darwin/arm64 is failing to build due to some kind of linking issue
#          - os: darwin
#            arch: arm64
          - os: dragonfly
            arch: amd64
          - os: freebsd
            arch: 386
          - os: freebsd
            arch: amd64
          - os: freebsd
            arch: arm
          - os: freebsd
            arch: arm64
          - os: linux
            arch: 386
          - os: linux
            arch: amd64
          - os: linux
            arch: arm
          - os: linux
            arch: arm64
          - os: linux
            arch: mips
          - os: linux
            arch: mips64
          - os: linux
            arch: mips64le
          - os: linux
            arch: mipsle
          - os: linux
            arch: ppc64
          - os: linux
            arch: ppc64le
          - os: linux
            arch: riscv64
          - os: linux
            arch: s390x
          - os: netbsd
            arch: 386
          - os: netbsd
            arch: amd64
          - os: netbsd
            arch: arm
          - os: netbsd
            arch: arm64
          - os: openbsd
            arch: 386
          - os: openbsd
            arch: amd64
          - os: openbsd
            arch: arm
          - os: openbsd
            arch: arm64
          - os: solaris
            arch: amd64
          - os: windows
            arch: 386
          - os: windows
            arch: amd64
          - os: windows
            arch: arm
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: '^1.15'

      - name: print matrix strat for debugging
        run: echo ${{ matrix.platform.os }}/${{ matrix.platform.arch }}

      - name: Set binary name
        if: matrix.platform.os != 'windows'
        run: echo "binary_name=kpkg_${{ matrix.platform.os }}_${{ matrix.platform.arch }}" >> $GITHUB_ENV

      - name: Set binary name for windows
        if: matrix.platform.os == 'windows'
        run: echo "binary_name=kpkg_${{ matrix.platform.os }}_${{ matrix.platform.arch }}.exe" >> $GITHUB_ENV

      - name: print binary name for debugging
        run: echo ${{ env.binary_name }}

      - name: Build
        run: |
          GOOS=${{ matrix.platform.os }} GOARCH=${{ matrix.platform.arch }} go build -o ${{ env.binary_name }}